apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Values.db.name }}
spec:
  serviceName: postgres
  replicas: {{ .Values.db.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.db.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.db.name }}
    spec:
      containers:
        - name: {{ .Values.db.name }}
          image: "{{ .Values.db.image }}:{{ .Values.db.tag }}"
          imagePullPolicy: IfNotPresent
          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: db-secret
                  key: WRITE_USERNAME
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: db-secret
                  key: WRITE_PASSWORD
            - name: PGDATA
              value: /var/lib/postgresql/data/pgdata
          ports:
            - containerPort: {{ .Values.db.port }}
              name: {{ .Values.db.name }}
          volumeMounts:
            - name: "{{ .Values.db.name }}-pv-claim"
              mountPath: /var/lib/postgresql/data
  volumeClaimTemplates:
    - metadata:
        name: "{{ .Values.db.name }}-pv-claim"
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: {{ .Values.db.storage }}